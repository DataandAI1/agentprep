rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(ownerId) {
      return isAuthenticated() && request.auth.uid == ownerId;
    }
    
    // Use Cases collection
    match /useCases/{useCaseId} {
      // Users can read their own use cases
      allow read: if isOwner(resource.data.ownerId);
      
      // Users can create use cases with their own ownerId
      allow create: if isAuthenticated() && 
                       request.resource.data.ownerId == request.auth.uid;
      
      // Users can update their own use cases
      allow update: if isOwner(resource.data.ownerId) &&
                       request.resource.data.ownerId == resource.data.ownerId;
      
      // Users can delete their own use cases
      allow delete: if isOwner(resource.data.ownerId);
      
      // Subcollections
      match /roles/{roleId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/useCases/$(useCaseId)).data.ownerId);
      }
      
      match /processSteps/{stepId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/useCases/$(useCaseId)).data.ownerId);
      }
      
      match /dataAssets/{assetId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/useCases/$(useCaseId)).data.ownerId);
      }
      
      match /applications/{appId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/useCases/$(useCaseId)).data.ownerId);
      }
      
      match /rules/{ruleId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/useCases/$(useCaseId)).data.ownerId);
      }
      
      match /slas/{slaId} {
        allow read, write: if isOwner(get(/databases/$(database)/documents/useCases/$(useCaseId)).data.ownerId);
      }
    }
    
    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
